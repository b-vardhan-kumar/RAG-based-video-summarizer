[{"video_title": "Virtual Machines vs Containers", "transcription": " Hello everyone, in this video we're going to talk about the difference between virtual machines and containers. But before we talk about the difference between the two, let's go back and talk about how things were before VMs and containers. So the traditional way that a company or a business operates is by having applications running on servers. And each server would just have one application running. Whether that application is running a website, a database, or email. So it would be one application on one server. And this was because the operating systems on these servers, such as Linux and Windows, didn't really have the capability to run multiple applications securely on a single server. So with each new application that a company or a business offered, they would have to buy a new server for it to run on. And on top of that, the application wouldn't be able to take full advantage of the server's capability because modern servers today are so powerful that oftentimes the server is only running at 10% of its capacity. So by running one application on one server turned out to be a big waste of money and also on the server's full potential. So to fix this problem, engineers developed virtual machines. Virtual machines allows multiple applications to run on a single server by simulating hardware and software. So for example, if a company had three servers running one application each, those three applications can be run on a single server by simulating those three servers and their applications by creating three virtual machines. So now this one server is running three virtual or software based machines. It's running all of the different operating systems and also the applications such as databases, web services, and email and they're all running side by side on one machine. So as you can see on this graphic, to build virtual machines, you start off with hardware such as a server and then on top of the hardware, there's software called a hypervisor. A hypervisor is what allows one machine to run multiple virtual machines. It's what allocates and controls the sharing of a machine's hardware. Some common hypervisors are VMware ESXi, Citrix Zen Server, and Microsoft Hyper-V. And on top of the hypervisor are the virtual machines and each of these will have their own operating system such as Windows, Linux, and Unix. And then on top of the operating systems, there's the applications that these machines are going to be running. So as you can see, virtual machines solve the problem of wasting money on new servers. But as great as they are, they do have some drawbacks. And one of them is that VMs can consume a lot of disk space. And this is because each VM has its own dedicated operating system. And because they have their own operating system, VMs also consume a lot of RAM and CPU power from the server that could be used for other processes. And VMs are slow to start up because since they have an entire operating system, they do take time to boot up. And with each VM, it also requires a license for the operating system, which costs even more money. Now let's talk about containers. Now containers are similar to VMs, but the major difference is that where VMs simulate an entire machine, containers only contain an application. It container is an application that's been packaged with all the files, configurations, and dependencies necessary for it to run, which basically means that it's bundled with everything that it needs to run on just about any computing environment without having to add anything else to that computer. So for example, if a developer created a website and they wanted to distribute that website, so it can be hosted on just about any other computer, they can create a container for that website by bundling it with everything it takes for it to be hosted on another computer, such as the libraries, HTML code, scripts, web images, and web server software. Then that container image can be distributed and hosted on just about any computer or server without adding any additional software or doing any configuration. The container has everything it needs to run that website all in a convenient little package, which is amazing. And the leading software that is used to create, manage, and run containers is Docker. Docker can run on Linux and Windows machines. So just like VMs to create containers, you start off with hardware, such as a server. And then on top of the hardware is an operating system, such as Linux. Now instead of a hypervisor, containers will use a container engine. A container engine is what unpacks the container files and then hands them off to the core of the operating system, which is the kernel. So as I stated before, the major difference between containers and virtual machines is that each VM contains an entire operating system, which makes their file size larger, which is why they are slower to boot up. But on the other hand, containers don't. The containers share the underlying operating system that's on the server between them containers only contain an application, which makes their file size much smaller. And this is why containers are considered lightweight, which also makes them lightning fast. So while VMs can take minutes to boot up, containers take milliseconds. Containers also consume less RAM and CPU power from the server than VMs. Now both VM files and container files are portable, which means that you can move them easily to different machines. But container files are a lot smaller, which makes them ultra portable. Now containers do have some disadvantages when compared to virtual machines. And one disadvantage is that the container file or image must be packaged to work with the same operating system of the server that it's running on. So if the server's operating system is Linux, then the container file must be Linux based. If the operating system is Windows, then the container must be Windows based. But with virtual machines, this is a problem. A VM can run any operating system it wants. Another disadvantage is that since the containers share the underlying operating system between them, that means that if the operating system on the server crashes, then all the containers will go down. So you can clearly see that both VMs and containers are amazing technologies. In fact, some organizations use both of these technologies on the same machine where they would have a server running VMs and inside those VMs, there would be running containers utilizing maximum productivity. But that being said, Docker containers are clearly the future because of their size, portability, and speed. Hey guys, are you tired of keeping track of your passwords? Does your computer look like this? Are you tired of forgetting your passwords? Well, so was I. So for the past three months, I've been using Roboform Password Manager. Roboform is the number one ranked password manager that makes your life easier by remembering passwords and logging you into websites automatically. Just remember your one master password and Roboform remembers the rest. It's that easy. Roboform automatically logs you into your favorite websites with one click. So say goodbye to searching through text files, notepads, and posted notes of scribbled passwords. Roboform stores your passwords and logs you in with one click. So there is no more typing. Roboform uses industry standard encryption for all your data. So you can be absolutely sure that your information is secure. And with over 20 years of experience and more than 30,000 five star reviews, Roboform is the perfect solution for your password problems. You can try Roboform free for one of your devices or you can sync all of your passwords with all of your devices using Roboform everywhere. And I have a discount link in the description of this video. So guys, I want to thank you for watching this video. Please subscribe and I will see you in the next video."}]